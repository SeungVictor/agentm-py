name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: self-hosted

    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black flake8

      - name: Run flake8
        run: flake8 src/ tests/ | tee flake8-output.log

      - name: Run black
        run: black --check src/ tests/ | tee black-output.log

      - name: Run tests
        run: pytest | tee pytest-output.log

      - name: Push logs to Loki
        env:
          LOKI_URL: ${{ secrets.LOKI_URL }}
          LOKI_USER: ${{ secrets.LOKI_USER }}
          LOKI_PASS: ${{ secrets.LOKI_PASS }}
        run: |
          TIMESTAMP=$(date +%s%N)
          LOG_FILE=flake8-output.log
          ERROR_LOG_FILE=black-output.log
          TEST_LOG_FILE=pytest-output.log

          # Capture CI job log status
          CI_STATUS="INFO: CI job completed successfully"

          # If any of the logs contain errors, adjust CI_STATUS
          if grep -q "ERROR" $LOG_FILE || grep -q "ERROR" $ERROR_LOG_FILE || grep -q "ERROR" $TEST_LOG_FILE; then
            CI_STATUS="ERROR: CI job encountered issues"
          fi

          curl -u "$LOKI_USER:$LOKI_PASS" -X POST "$LOKI_URL/loki/api/v1/push" \
          -H "Content-Type: application/json" \
          -d '{
            "streams": [
              {
                "stream": { "job": "ci-cd-pipeline", "level": "INFO" },
                "values": [
                  ["'"$TIMESTAMP"'", "'"$CI_STATUS"'"]
                ]
              },
              {
                "stream": { "job": "ci-cd-pipeline", "level": "ERROR" },
                "values": [
                  ["'"$TIMESTAMP"'", "ERROR: '$(cat $LOG_FILE) $(cat $ERROR_LOG_FILE) $(cat $TEST_LOG_FILE)'"]
                ]
              }
            ]
          }'

